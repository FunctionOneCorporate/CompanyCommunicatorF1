[{"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\index.tsx":"1","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\serviceWorker.ts":"2","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\App.tsx":"3","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\reducers\\index.ts":"4","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\i18n.ts":"5","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\config.tsx":"6","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\SignInPage\\signInPage.tsx":"7","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\TabContainer\\tabContainer.tsx":"8","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\SignInPage\\signInSimpleStart.tsx":"9","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\NewMessage\\scheduleNewMessage.tsx":"10","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\NewMessage\\templateNewMessage.tsx":"11","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\SendConfirmationTaskModule\\sendConfirmationTaskModule.tsx":"12","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\NewMessage\\NewMessage.tsx":"13","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\StatusTaskModule\\statusTaskModule.tsx":"14","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\SignInPage\\signInSimpleEnd.tsx":"15","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\ErrorPage\\errorPage.tsx":"16","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\configVariables.ts":"17","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\AdaptiveCard\\adaptiveCard.ts":"18","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\apis\\messageListApi.ts":"19","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\DraftMessages\\draftMessages.tsx":"20","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\ScheduleMessages\\scheduleMessages.tsx":"21","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\Messages\\messages.tsx":"22","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\TemplateMessages\\templateMessages.tsx":"23","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\utility\\imageutility.tsx":"24","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\utility\\FileBase64.tsx":"25","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\actions\\index.ts":"26","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\apis\\axiosJWTDecorator.ts":"27","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\OverFlow\\sentMessageOverflow.tsx":"28","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\OverFlow\\templateMessageOverflow.tsx":"29","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\OverFlow\\draftMessageOverflow.tsx":"30"},{"size":757,"mtime":1686782479032,"results":"31","hashOfConfig":"32"},{"size":5344,"mtime":1686782479034,"results":"33","hashOfConfig":"32"},{"size":4757,"mtime":1686782479018,"results":"34","hashOfConfig":"32"},{"size":1426,"mtime":1686782479034,"results":"35","hashOfConfig":"32"},{"size":2058,"mtime":1686782479032,"results":"36","hashOfConfig":"32"},{"size":1153,"mtime":1686782479032,"results":"37","hashOfConfig":"32"},{"size":1238,"mtime":1686782479028,"results":"38","hashOfConfig":"32"},{"size":3963,"mtime":1686782479031,"results":"39","hashOfConfig":"32"},{"size":787,"mtime":1686782479029,"results":"40","hashOfConfig":"32"},{"size":49834,"mtime":1686782479023,"results":"41","hashOfConfig":"32"},{"size":49452,"mtime":1686782479023,"results":"42","hashOfConfig":"32"},{"size":9100,"mtime":1686782479028,"results":"43","hashOfConfig":"32"},{"size":52406,"mtime":1686784565972,"results":"44","hashOfConfig":"32"},{"size":14801,"mtime":1686782479029,"results":"45","hashOfConfig":"32"},{"size":1261,"mtime":1686782479029,"results":"46","hashOfConfig":"32"},{"size":884,"mtime":1686782479021,"results":"47","hashOfConfig":"32"},{"size":82,"mtime":1686782479032,"results":"48","hashOfConfig":"32"},{"size":6558,"mtime":1686782479019,"results":"49","hashOfConfig":"32"},{"size":6857,"mtime":1686782479018,"results":"50","hashOfConfig":"32"},{"size":5644,"mtime":1686782479019,"results":"51","hashOfConfig":"32"},{"size":4796,"mtime":1686782479028,"results":"52","hashOfConfig":"32"},{"size":8460,"mtime":1686782479021,"results":"53","hashOfConfig":"32"},{"size":5153,"mtime":1686782479031,"results":"54","hashOfConfig":"32"},{"size":1283,"mtime":1686782479035,"results":"55","hashOfConfig":"32"},{"size":1703,"mtime":1686782479035,"results":"56","hashOfConfig":"32"},{"size":1641,"mtime":1686782479018,"results":"57","hashOfConfig":"32"},{"size":4392,"mtime":1686782479018,"results":"58","hashOfConfig":"32"},{"size":4366,"mtime":1686782479026,"results":"59","hashOfConfig":"32"},{"size":5890,"mtime":1686782479026,"results":"60","hashOfConfig":"32"},{"size":7669,"mtime":1686782479025,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1t0gi11",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\index.tsx",[],["126","127"],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\serviceWorker.ts",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\App.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\reducers\\index.ts",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\i18n.ts",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\config.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\SignInPage\\signInPage.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\TabContainer\\tabContainer.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\SignInPage\\signInSimpleStart.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\NewMessage\\scheduleNewMessage.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\NewMessage\\templateNewMessage.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\SendConfirmationTaskModule\\sendConfirmationTaskModule.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\NewMessage\\NewMessage.tsx",["128","129"],"import * as React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport {\r\n\tInput,\r\n\tTextArea,\r\n\tRadiobutton,\r\n\tRadiobuttonGroup,\r\n\tCheckbox,\r\n} from \"msteams-ui-components-react\";\r\nimport { initializeIcons } from \"office-ui-fabric-react/lib/Icons\";\r\nimport * as AdaptiveCards from \"adaptivecards\";\r\nimport { Button, Loader, Dropdown, Text } from \"@stardust-ui/react\";\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport \"./newMessage.scss\";\r\nimport \"./teamTheme.scss\";\r\nimport {\r\n\tgetDraftNotification,\r\n\tgetTeams,\r\n\tcreateDraftNotification,\r\n\tupdateDraftNotification,\r\n\tsearchGroupsDraft,\r\n\tgetGroupsDraft,\r\n\tverifyGroupAccessDraft,\r\n\tcreateScheduleNotification,\r\n\tcreateTemplateNotification,\r\n\timageBase64toURI\r\n} from \"../../apis/messageListApi\";\r\nimport { getDraftMessagesList } from \"../../actions\"\r\nimport {\r\n\tgetInitAdaptiveCard,\r\n\tsetCardTitle,\r\n\tsetCardImageLink,\r\n\tsetCardSummary,\r\n\tsetCardAuthor,\r\n\t//setCardBtn,\r\n\tsetCardImgHeader,\r\n\tsetCardImgFooter,\r\n\t//setCardBtn02,\r\n\t//delActions,\r\n\tsetCardActions,\r\n} from \"../AdaptiveCard/adaptiveCard\";\r\nimport { getBaseUrl } from \"../../configVariables\";\r\nimport { ImageUtil } from \"../../utility/imageutility\";\r\nimport { TFunction } from \"i18next\";\r\nimport FileBase64 from '../../utility/FileBase64';\r\nimport { isNull } from \"util\";\r\n\r\nfunction isStringNullOrWhiteSpace(str: string| undefined) {\r\n\treturn str === undefined || str === null\r\n\t\t|| typeof str !== 'string'\r\n\t\t|| str.match(/^ *$/) !== null;\r\n};\r\n\r\ntype dropdownItem = {\r\n\tkey: string;\r\n\theader: string;\r\n\tcontent: string;\r\n\timage: string;\r\n\tteam: {\r\n\t\tid: string;\r\n\t};\r\n};\r\n\r\nexport interface IDraftMessage {\r\n\tid?: string;\r\n\ttitle?: string;\r\n\timageLink?: string;\r\n\tsummary?: string;\r\n\tauthor: string;\r\n\tbuttonTitle?: string;\r\n\tbuttonLink?: string;\r\n\tteams: any[];\r\n\trosters: any[];\r\n\tgroups: any[];\r\n\tallUsers: boolean;\r\n\ttemplate: boolean;\r\n\tschedule: boolean;\r\n\tscheduleDate: string;\r\n\theaderImgLink?: string;\r\n\tfooterImgLink?: string;\r\n\tbuttonLink2?: string;\r\n\tbuttonTitle2?: string;\r\n\tnmMensagem: string;\r\n}\r\n\r\nexport interface formState {\r\n\ttitle?: string;\r\n\tsummary?: string;\r\n\tbtnLink?: string;\r\n\timageLink?: string;\r\n\tbtnTitle?: string;\r\n\tauthor: string;\r\n\tcard?: any;\r\n\tpage: string;\r\n\tteamsOptionSelected: boolean;\r\n\trostersOptionSelected: boolean;\r\n\tallUsersOptionSelected: boolean;\r\n\tgroupsOptionSelected: boolean;\r\n\tteams?: any[];\r\n\tgroups?: any[];\r\n\texists?: boolean;\r\n\tmessageId: string;\r\n\tloader: boolean;\r\n\tgroupAccess: boolean;\r\n\tloading: boolean;\r\n\tnoResultMessage: string;\r\n\tunstablePinned?: boolean;\r\n\tselectedTeamsNum: number;\r\n\tselectedRostersNum: number;\r\n\tselectedGroupsNum: number;\r\n\tselectedRadioBtn: string;\r\n\tselectedTeams: dropdownItem[];\r\n\tselectedRosters: dropdownItem[];\r\n\tselectedGroups: dropdownItem[];\r\n\terrorImageUrlMessage: string;\r\n\terrorButtonUrlMessage: string;\r\n\tselectedTemplate: boolean;\r\n\tselectedSchedule: boolean;\r\n\tscheduleDate: string;\r\n\theaderImgLink?: string;\r\n\tfooterImgLink?: string;\r\n\tbuttonLink2?: string;\r\n\tbuttonTitle2?: string;\r\n\tnmMensagem: string;\r\n}\r\n\r\nexport interface INewMessageProps extends RouteComponentProps, WithTranslation {\r\n\tgetDraftMessagesList?: any;\r\n}\r\n\r\nclass NewMessage extends React.Component<INewMessageProps, formState> {\r\n\treadonly localize: TFunction;\r\n\tprivate card: any;\r\n\tconstructor(props: INewMessageProps) {\r\n\t\tsuper(props);\r\n\t\tinitializeIcons();\r\n\t\tthis.localize = this.props.t;\r\n\t\tthis.card = getInitAdaptiveCard(this.localize);\r\n\t\tthis.setDefaultCard(this.card);\r\n\r\n\t\tthis.state = {\r\n\t\t\ttitle: \"\",\r\n\t\t\tsummary: \"\",\r\n\t\t\tauthor: \"\",\r\n\t\t\tbtnLink: \"\",\r\n\t\t\timageLink: \"\",\r\n\t\t\tbtnTitle: \"\",\r\n\t\t\tcard: this.card,\r\n\t\t\tpage: \"CardCreation\",\r\n\t\t\tteamsOptionSelected: true,\r\n\t\t\trostersOptionSelected: false,\r\n\t\t\tallUsersOptionSelected: false,\r\n\t\t\tgroupsOptionSelected: false,\r\n\t\t\tmessageId: \"\",\r\n\t\t\tloader: true,\r\n\t\t\tgroupAccess: false,\r\n\t\t\tloading: false,\r\n\t\t\tnoResultMessage: \"\",\r\n\t\t\tunstablePinned: true,\r\n\t\t\tselectedTeamsNum: 0,\r\n\t\t\tselectedRostersNum: 0,\r\n\t\t\tselectedGroupsNum: 0,\r\n\t\t\tselectedRadioBtn: \"teams\",\r\n\t\t\tselectedTeams: [],\r\n\t\t\tselectedRosters: [],\r\n\t\t\tselectedGroups: [],\r\n\t\t\terrorImageUrlMessage: \"\",\r\n\t\t\terrorButtonUrlMessage: \"\",\r\n\t\t\tscheduleDate: \"\",\r\n\t\t\tselectedSchedule: false,\r\n\t\t\tselectedTemplate: false,\r\n\t\t\theaderImgLink: \"\",\r\n\t\t\tfooterImgLink: \"\",\r\n\t\t\tbuttonLink2: \"\",\r\n\t\t\tbuttonTitle2: \"\",\r\n\t\t\tnmMensagem: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tpublic async componentDidMount() {\r\n\t\tmicrosoftTeams.initialize();\r\n\t\t//- Handle the Esc key\r\n\t\tdocument.addEventListener(\"keydown\", this.escFunction, false);\r\n\t\tlet params = this.props.match.params;\r\n\t\tthis.setGroupAccess();\r\n\t\tthis.getTeamList().then(() => {\r\n\t\t\tif (\"id\" in params) {\r\n\t\t\t\tlet id = params[\"id\"];\r\n\t\t\t\tthis.getItem(id).then(() => {\r\n\t\t\t\t\tconst selectedTeams = this.makeDropdownItemList(\r\n\t\t\t\t\t\tthis.state.selectedTeams,\r\n\t\t\t\t\t\tthis.state.teams\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst selectedRosters = this.makeDropdownItemList(\r\n\t\t\t\t\t\tthis.state.selectedRosters,\r\n\t\t\t\t\t\tthis.state.teams\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\texists: true,\r\n\t\t\t\t\t\tmessageId: id,\r\n\t\t\t\t\t\tselectedTeams: selectedTeams,\r\n\t\t\t\t\t\tselectedRosters: selectedRosters,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tthis.getGroupData(id).then(() => {\r\n\t\t\t\t\tconst selectedGroups = this.makeDropdownItems(this.state.groups);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tselectedGroups: selectedGroups,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\texists: false,\r\n\t\t\t\t\t\tloader: false,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\tlet adaptiveCard = new AdaptiveCards.AdaptiveCard();\r\n\t\t\t\t\t\tadaptiveCard.parse(this.state.card);\r\n\t\t\t\t\t\tlet renderedCard = adaptiveCard.render();\r\n\t\t\t\t\t\tdocument\r\n\t\t\t\t\t\t\t.getElementsByClassName(\"adaptiveCardContainer\")[0]\r\n\t\t\t\t\t\t\t.appendChild(renderedCard);\r\n\t\t\t\t\t\tif (this.state.btnLink) {\r\n\t\t\t\t\t\t\tlet link = this.state.btnLink;\r\n\t\t\t\t\t\t\tadaptiveCard.onExecuteAction = function (action) {\r\n\t\t\t\t\t\t\t\twindow.open(link, \"_blank\");\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate makeDropdownItems = (items: any[] | undefined) => {\r\n\t\tconst resultedTeams: dropdownItem[] = [];\r\n\t\tif (items) {\r\n\t\t\titems.forEach((element) => {\r\n\t\t\t\tresultedTeams.push({\r\n\t\t\t\t\tkey: element.id,\r\n\t\t\t\t\theader: element.name,\r\n\t\t\t\t\tcontent: element.mail,\r\n\t\t\t\t\timage: ImageUtil.makeInitialImage(element.name),\r\n\t\t\t\t\tteam: {\r\n\t\t\t\t\t\tid: element.id,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn resultedTeams;\r\n\t};\r\n\r\n\tprivate makeDropdownItemList = (\r\n\t\titems: any[],\r\n\t\tfromItems: any[] | undefined\r\n\t) => {\r\n\t\tconst dropdownItemList: dropdownItem[] = [];\r\n\t\titems.forEach((element) =>\r\n\t\t\tdropdownItemList.push(\r\n\t\t\t\ttypeof element !== \"string\"\r\n\t\t\t\t\t? element\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t\tkey: fromItems!.find((x) => x.id === element).id,\r\n\t\t\t\t\t\t\theader: fromItems!.find((x) => x.id === element).name,\r\n\t\t\t\t\t\t\timage: ImageUtil.makeInitialImage(\r\n\t\t\t\t\t\t\t\tfromItems!.find((x) => x.id === element).name\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tteam: {\r\n\t\t\t\t\t\t\t\tid: element,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t\treturn dropdownItemList;\r\n\t};\r\n\r\n\tpublic setDefaultCard = (card: any) => {\r\n\t\tconst titleAsString = this.localize(\"TitleText\");\r\n\t\tconst summaryAsString = this.localize(\"Summary\");\r\n\t\tconst authorAsString = this.localize(\"Author1\");\r\n\t\tconst buttonTitleAsString = this.localize(\"ButtonTitle\");\r\n\t\tconst buttonTitleASString2 = this.localize(\"ButtonTitle2\")\r\n\r\n\t\tsetCardTitle(card, titleAsString);\r\n\t\tlet imgUrl = getBaseUrl() + \"/image/imagePlaceholder.png\";\r\n\t\tlet link = \"https://adaptivecards.io\";\r\n\t\tsetCardImgHeader(card, imgUrl);\r\n\t\tsetCardImageLink(card, imgUrl);\r\n\t\tsetCardSummary(card, summaryAsString);\r\n\t\tsetCardAuthor(card, authorAsString);\r\n\t\tsetCardActions(card, buttonTitleAsString, link, buttonTitleASString2, link);\r\n\t\tsetCardImgFooter(card, imgUrl);\r\n\t};\r\n\r\n\tprivate getTeamList = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await getTeams();\r\n\t\t\tthis.setState({\r\n\t\t\t\tteams: response.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t};\r\n\r\n\tprivate getGroupItems() {\r\n\t\tif (this.state.groups) {\r\n\t\t\treturn this.makeDropdownItems(this.state.groups);\r\n\t\t}\r\n\t\tconst dropdownItems: dropdownItem[] = [];\r\n\t\treturn dropdownItems;\r\n\t}\r\n\r\n\tprivate setGroupAccess = async () => {\r\n\t\tawait verifyGroupAccessDraft()\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tgroupAccess: true,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconst errorStatus = error.response.status;\r\n\t\t\t\tif (errorStatus === 403) {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tgroupAccess: false,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow error;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\r\n\tprivate getGroupData = async (id: number) => {\r\n\t\ttry {\r\n\t\t\tconst response = await getGroupsDraft(id);\r\n\t\t\tthis.setState({\r\n\t\t\t\tgroups: response.data,\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t};\r\n\r\n\tprivate getItem = async (id: number) => {\r\n\t\ttry {\r\n\t\t\tconst response = await getDraftNotification(id);\r\n\t\t\tconst draftMessageDetail = response.data;\r\n\t\t\tlet selectedRadioButton = \"teams\";\r\n\t\t\tif (draftMessageDetail.rosters.length > 0) {\r\n\t\t\t\tselectedRadioButton = \"rosters\";\r\n\t\t\t} else if (draftMessageDetail.groups.length > 0) {\r\n\t\t\t\tselectedRadioButton = \"groups\";\r\n\t\t\t} else if (draftMessageDetail.allUsers) {\r\n\t\t\t\tselectedRadioButton = \"allUsers\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tteamsOptionSelected: draftMessageDetail.teams.length > 0,\r\n\t\t\t\tselectedTeamsNum: draftMessageDetail.teams.length,\r\n\t\t\t\trostersOptionSelected: draftMessageDetail.rosters.length > 0,\r\n\t\t\t\tselectedRostersNum: draftMessageDetail.rosters.length,\r\n\t\t\t\tgroupsOptionSelected: draftMessageDetail.groups.length > 0,\r\n\t\t\t\tselectedGroupsNum: draftMessageDetail.groups.length,\r\n\t\t\t\tselectedRadioBtn: selectedRadioButton,\r\n\t\t\t\tselectedTeams: draftMessageDetail.teams,\r\n\t\t\t\tselectedRosters: draftMessageDetail.rosters,\r\n\t\t\t\tselectedGroups: draftMessageDetail.groups,\r\n\t\t\t});\r\n\r\n\t\t\tsetCardImgHeader(this.card, draftMessageDetail.headerImgLink);\r\n\t\t\tsetCardTitle(this.card, draftMessageDetail.title);\r\n\t\t\tsetCardImageLink(this.card, draftMessageDetail.imageLink);\r\n\t\t\tsetCardSummary(this.card, draftMessageDetail.summary);\r\n\t\t\tsetCardAuthor(this.card, draftMessageDetail.author);\r\n\t\t\tsetCardImgFooter(this.card, draftMessageDetail.footerImgLink);\r\n\r\n\t\t\t//setCardBtn(\r\n\t\t\t//\tthis.card,\r\n\t\t\t//\tdraftMessageDetail.buttonTitle,\r\n\t\t\t//\tdraftMessageDetail.buttonLink\r\n\t\t\t//);\r\n\r\n\t\t\t//setCardBtn02(this.card,\r\n\t\t\t//\tdraftMessageDetail.buttonTitle2,\r\n\t\t\t//\tdraftMessageDetail.buttonLink2\r\n\t\t\t//);\r\n\r\n\t\t\tsetCardActions(this.card, draftMessageDetail.buttonTitle, draftMessageDetail.buttonLink, draftMessageDetail.buttonTitle2, draftMessageDetail.buttonLink2  )\r\n\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\ttitle: draftMessageDetail.title,\r\n\t\t\t\t\tsummary: draftMessageDetail.summary,\r\n\t\t\t\t\tbtnLink: draftMessageDetail.buttonLink,\r\n\t\t\t\t\timageLink: draftMessageDetail.imageLink,\r\n\t\t\t\t\tbtnTitle: draftMessageDetail.buttonTitle,\r\n\t\t\t\t\tauthor: draftMessageDetail.author,\r\n\t\t\t\t\tallUsersOptionSelected: draftMessageDetail.allUsers,\r\n\t\t\t\t\tloader: false,\r\n\t\t\t\t\tbuttonTitle2: draftMessageDetail.buttonTitle2,\r\n\t\t\t\t\tbuttonLink2: draftMessageDetail.buttonLink2,\r\n\t\t\t\t\tfooterImgLink: draftMessageDetail.footerImgLink,\r\n\t\t\t\t\theaderImgLink: draftMessageDetail.headerImgLink,\r\n\t\t\t\t\tnmMensagem: draftMessageDetail.nmMensagem,\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tthis.updateCard();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t};\r\n\r\n\tpublic componentWillUnmount() {\r\n\t\tdocument.removeEventListener(\"keydown\", this.escFunction, false);\r\n\t}\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tif (this.state.loader) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"Loader\">\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tif (this.state.page === \"CardCreation\") {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"taskModule\">\r\n\t\t\t\t\t\t<div className=\"formContainer\">\r\n\t\t\t\t\t\t\t<div className=\"formContentContainer\">\r\n\t\t\t\t\t\t\t\t{/*Nome da mensagem*/}\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.nmMensagem}\r\n\t\t\t\t\t\t\t\t\tlabel={this.localize(\"NameMessage\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"PlaceHolderName\")}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onNmMsgChanged}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t {/*Imagem de Header*/}\r\n\t\t\t\t\t\t\t\t<div style={{ display: \"flex\", flexFlow: \"row nowrap\", alignItems: \"flex-end\" }}>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ flexShrink: 0, flex: 10, margin: \"0 0 0 3.2rem\" }}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.headerImgLink}\r\n\t\t\t\t\t\t\t\t\t\tlabel={this.localize(\"ImgHeader\")}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"ImgHeader\")}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onImageLinkHeaderChanged}\r\n\t\t\t\t\t\t\t\t\t\terrorLabel={this.state.errorImageUrlMessage}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ flex: \"1 1 auto\", margin: \"0 3.2rem 0 0\" }}\r\n\t\t\t\t\t\t\t\t\t\tcontent={this.localize(\"ImageSend\")}\r\n\t\t\t\t\t\t\t\t\t\tid=\"imageUploadBtnHeader\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.clickUploadHeader.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FileBase64\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\t\t\t\t\t\trefProp={input => this.inputElementFileBase64Header = input}\r\n\t\t\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t\t\t\tonDone={this.getFilesHeader.bind(this)} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{/*T�tulo da mensagem*/}\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.title}\r\n\t\t\t\t\t\t\t\t\tlabel={this.localize(\"TitleText\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"PlaceHolderTitle\")}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onTitleChanged}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/*Sum�rio*/}\r\n\t\t\t\t\t\t\t\t<TextArea\r\n\t\t\t\t\t\t\t\t\tclassName=\"inputField textArea\"\r\n\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"Summary\")}\r\n\t\t\t\t\t\t\t\t\tlabel={this.localize(\"Summary\")}\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.summary}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onSummaryChanged}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/*Imagem de corpo*/}\r\n\t\t\t\t\t\t\t\t<div style={{display: \"flex\",flexFlow: \"row nowrap\",alignItems: \"flex-end\"}}>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{flexShrink: 0, flex: 10, margin: \"0 0 0 3.2rem\"}}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.imageLink}\r\n\t\t\t\t\t\t\t\t\t\tlabel={this.localize(\"ImageURL\")}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"ImageURL\")}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onImageLinkChanged}\r\n\t\t\t\t\t\t\t\t\t\terrorLabel={this.state.errorImageUrlMessage}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{flex: \"1 1 auto\", margin: \"0 3.2rem 0 0\"}}\r\n\t\t\t\t\t\t\t\t\t\tcontent={this.localize(\"ImageSend\")}\r\n\t\t\t\t\t\t\t\t\t\tid=\"imageUploadBtn\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.clickUpload.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FileBase64\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\t\t\t\t\t\trefProp={input => this.inputElementFileBase64 = input}\r\n\t\t\t\t\t\t\t\t\t\tmultiple={ false }\r\n\t\t\t\t\t\t\t\t\t\tonDone={ this.getFiles.bind(this) } />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{/*Autor da mensagem*/}\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.author}\r\n\t\t\t\t\t\t\t\t\tlabel={this.localize(\"Author\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"Author\")}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onAuthorChanged}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/*Nome do Bot�o 01*/}\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.btnTitle}\r\n\t\t\t\t\t\t\t\t\tlabel={this.localize(\"ButtonTitle\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"ButtonTitle\")}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onBtnTitleChanged}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/*Link do Bot�o 01*/}\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.btnLink}\r\n\t\t\t\t\t\t\t\t\tlabel={this.localize(\"ButtonURL\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"ButtonURL\")}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onBtnLinkChanged}\r\n\t\t\t\t\t\t\t\t\terrorLabel={this.state.errorButtonUrlMessage}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/*Nome do bot�o 02*/}\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.buttonTitle2}\r\n\t\t\t\t\t\t\t\t\tlabel={this.localize(\"ButtonTitle2\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"ButtonTitle2\")}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onBtnTitleChanged2}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/*Link do bot�o 02*/}\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.buttonLink2}\r\n\t\t\t\t\t\t\t\t\tlabel={this.localize(\"ButtonURL2\")}\r\n\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"ButtonURL2\")}\r\n\t\t\t\t\t\t\t\t\tonChange={this.onBtnLinkChanged2}\r\n\t\t\t\t\t\t\t\t\terrorLabel={this.state.errorButtonUrlMessage}\r\n\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{/*Imagem de rodap�*/}\r\n\t\t\t\t\t\t\t\t<div style={{ display: \"flex\", flexFlow: \"row nowrap\", alignItems: \"flex-end\" }}>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"inputField\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ flexShrink: 0, flex: 10, margin: \"0 0 0 3.2rem\" }}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.footerImgLink}\r\n\t\t\t\t\t\t\t\t\t\tlabel={this.localize(\"ImgFooter\")}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"ImgFooter\")}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onImageLinkFooterChanged}\r\n\t\t\t\t\t\t\t\t\t\terrorLabel={this.state.errorImageUrlMessage}\r\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ flex: \"1 1 auto\", margin: \"0 3.2rem 0 0\" }}\r\n\t\t\t\t\t\t\t\t\t\tcontent={this.localize(\"ImageSend\")}\r\n\t\t\t\t\t\t\t\t\t\tid=\"imageUploadBtnFooter\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={this.clickUploadFooter.bind(this)}\r\n\t\t\t\t\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<FileBase64\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\r\n\t\t\t\t\t\t\t\t\t\trefProp={input => this.inputElementFileBase64Footer = input}\r\n\t\t\t\t\t\t\t\t\t\tmultiple={false}\r\n\t\t\t\t\t\t\t\t\t\tonDone={this.getFilesFooter.bind(this)} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"adaptiveCardContainer\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"footerContainer\">\r\n\t\t\t\t\t\t\t<div className=\"buttonContainer\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcontent={this.localize(\"Next\")}\r\n\t\t\t\t\t\t\t\t\tdisabled={this.isNextBtnDisabled()}\r\n\t\t\t\t\t\t\t\t\tid=\"saveBtn\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.onNext}\r\n\t\t\t\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else if (this.state.page === \"AudienceSelection\") {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"taskModule\">\r\n\t\t\t\t\t\t<div className=\"formContainer\">\r\n\t\t\t\t\t\t\t<div className=\"formContentContainer\">\r\n\t\t\t\t\t\t\t\t<h3>{this.localize(\"SendHeadingText\")}</h3>\r\n\t\t\t\t\t\t\t\t<RadiobuttonGroup\r\n\t\t\t\t\t\t\t\t\tclassName=\"radioBtns\"\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.selectedRadioBtn}\r\n\t\t\t\t\t\t\t\t\tonSelected={this.onGroupSelected}>\r\n\t\t\t\t\t\t\t\t\t<Radiobutton\r\n\t\t\t\t\t\t\t\t\t\tname=\"grouped\"\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"teams\"\r\n\t\t\t\t\t\t\t\t\t\tlabel={this.localize(\"SendToGeneralChannel\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\t\t\thidden={!this.state.teamsOptionSelected}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\r\n\t\t\t\t\t\t\t\t\t\t\t\"SendToGeneralChannelPlaceHolder\"\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\tsearch\r\n\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\titems={this.getItems()}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.selectedTeams}\r\n\t\t\t\t\t\t\t\t\t\tonSelectedChange={this.onTeamsChange}\r\n\t\t\t\t\t\t\t\t\t\tnoResultsMessage={this.localize(\"NoMatchMessage\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Radiobutton\r\n\t\t\t\t\t\t\t\t\t\tname=\"grouped\"\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"rosters\"\r\n\t\t\t\t\t\t\t\t\t\tlabel={this.localize(\"SendToRosters\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\t\t\thidden={!this.state.rostersOptionSelected}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"SendToRostersPlaceHolder\")}\r\n\t\t\t\t\t\t\t\t\t\tsearch\r\n\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\titems={this.getItems()}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.selectedRosters}\r\n\t\t\t\t\t\t\t\t\t\tonSelectedChange={this.onRostersChange}\r\n\t\t\t\t\t\t\t\t\t\tunstable_pinned={this.state.unstablePinned}\r\n\t\t\t\t\t\t\t\t\t\tnoResultsMessage={this.localize(\"NoMatchMessage\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Radiobutton\r\n\t\t\t\t\t\t\t\t\t\tname=\"grouped\"\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"allUsers\"\r\n\t\t\t\t\t\t\t\t\t\tlabel={this.localize(\"SendToAllUsers\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.selectedRadioBtn === \"allUsers\" ? \"\" : \"hide\"\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"noteText\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontent={this.localize(\"SendToAllUsersNote\")}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Radiobutton\r\n\t\t\t\t\t\t\t\t\t\tname=\"grouped\"\r\n\t\t\t\t\t\t\t\t\t\tvalue=\"groups\"\r\n\t\t\t\t\t\t\t\t\t\tlabel={this.localize(\"SendToGroups\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.groupsOptionSelected && !this.state.groupAccess\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"hide\"\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"noteText\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t\t\t\t\terror\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontent={this.localize(\"SendToGroupsPermissionNote\")}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<Dropdown\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"hideToggle\"\r\n\t\t\t\t\t\t\t\t\t\thidden={\r\n\t\t\t\t\t\t\t\t\t\t\t!this.state.groupsOptionSelected ||\r\n\t\t\t\t\t\t\t\t\t\t\t!this.state.groupAccess\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder={this.localize(\"SendToGroupsPlaceHolder\")}\r\n\t\t\t\t\t\t\t\t\t\tsearch={this.onGroupSearch}\r\n\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\tloading={this.state.loading}\r\n\t\t\t\t\t\t\t\t\t\tloadingMessage={this.localize(\"LoadingText\")}\r\n\t\t\t\t\t\t\t\t\t\titems={this.getGroupItems()}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.selectedGroups}\r\n\t\t\t\t\t\t\t\t\t\tonSearchQueryChange={this.onGroupSearchQueryChange}\r\n\t\t\t\t\t\t\t\t\t\tonSelectedChange={this.onGroupsChange}\r\n\t\t\t\t\t\t\t\t\t\tnoResultsMessage={this.state.noResultMessage}\r\n\t\t\t\t\t\t\t\t\t\tunstable_pinned={this.state.unstablePinned}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\tthis.state.groupsOptionSelected && this.state.groupAccess\r\n\t\t\t\t\t\t\t\t\t\t\t\t? \"\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \"hide\"\r\n\t\t\t\t\t\t\t\t\t\t}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"noteText\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Text error content={this.localize(\"SendToGroupsNote\")} />\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</RadiobuttonGroup>\r\n\t\t\t\t\t\t\t\t<div className=\"sheduleCheckBox\">\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.selectedSchedule}\r\n\t\t\t\t\t\t\t\t\t\tonChecked={this.onCheckedSchedule}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.state.exists}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"CheckBoxSch\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"scheduleChk\"\r\n\t\t\t\t\t\t\t\t\t\tlabel={this.localize(\"ScheduleCheck\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"datetime-local\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"InputDate\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"dateTxt\"\r\n\t\t\t\t\t\t\t\t\t\thidden={!this.state.selectedSchedule}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.addDateSchedule}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.scheduleDate}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Text\r\n\t\t\t\t\t\t\t\t\t\thidden={!this.state.selectedSchedule}\r\n\t\t\t\t\t\t\t\t\t\ttitle=\"O disparo da mensagem poder� sofrer um atraso de at� 30 minutos.\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t{this.state.scheduleDate === \"\" && this.state.selectedTemplate === false && this.state.selectedSchedule ? <Text content={this.localize(\"ScheduleDateChoice\")} /> : null}\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.selectedTemplate}\r\n\t\t\t\t\t\t\t\t\t\tonChecked={this.onCheckedTemplate}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.state.exists}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"CheckBoxSch\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"scheduleChk\"\r\n\t\t\t\t\t\t\t\t\t\tlabel={this.localize(\"SaveAsTemplate\")}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"adaptiveCardContainer\"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"footerContainer\">\r\n\t\t\t\t\t\t\t<div className=\"buttonContainer\">\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcontent={this.localize(\"Back\")}\r\n\t\t\t\t\t\t\t\t\tonClick={this.onBack}\r\n\t\t\t\t\t\t\t\t\tsecondary\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcontent={this.localize(\"Save\")}\r\n\t\t\t\t\t\t\t\t\tdisabled={this.isSaveBtnDisabled()}\r\n\t\t\t\t\t\t\t\t\tid=\"saveBtn\"\r\n\t\t\t\t\t\t\t\t\tonClick={this.onSave}\r\n\t\t\t\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn <div>Error</div>;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onGroupSelected = (value: any) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedRadioBtn: value,\r\n\t\t\tteamsOptionSelected: value === \"teams\",\r\n\t\t\trostersOptionSelected: value === \"rosters\",\r\n\t\t\tgroupsOptionSelected: value === \"groups\",\r\n\t\t\tallUsersOptionSelected: value === \"allUsers\",\r\n\t\t\tselectedTeams: value === \"teams\" ? this.state.selectedTeams : [],\r\n\t\t\tselectedTeamsNum: value === \"teams\" ? this.state.selectedTeamsNum : 0,\r\n\t\t\tselectedRosters: value === \"rosters\" ? this.state.selectedRosters : [],\r\n\t\t\tselectedRostersNum:\tvalue === \"rosters\" ? this.state.selectedRostersNum : 0,\r\n\t\t\tselectedGroups: value === \"groups\" ? this.state.selectedGroups : [],\r\n\t\t\tselectedGroupsNum: value === \"groups\" ? this.state.selectedGroupsNum : 0,\r\n\t\t});\r\n\t};\r\n\r\n\tprivate isSaveBtnDisabled = () => {\r\n\t\tconst teamsSelectionIsValid =\r\n\t\t\t(this.state.teamsOptionSelected && this.state.selectedTeamsNum !== 0) ||\r\n\t\t\t!this.state.teamsOptionSelected;\r\n\t\tconst rostersSelectionIsValid =\r\n\t\t\t(this.state.rostersOptionSelected &&\r\n\t\t\t\tthis.state.selectedRostersNum !== 0) ||\r\n\t\t\t!this.state.rostersOptionSelected;\r\n\t\tconst groupsSelectionIsValid =\r\n\t\t\t(this.state.groupsOptionSelected && this.state.selectedGroupsNum !== 0) ||\r\n\t\t\t!this.state.groupsOptionSelected;\r\n\t\tconst nothingSelected =\r\n\t\t\t!this.state.teamsOptionSelected &&\r\n\t\t\t!this.state.rostersOptionSelected &&\r\n\t\t\t!this.state.groupsOptionSelected &&\r\n\t\t\t!this.state.allUsersOptionSelected;\r\n\t\treturn (\r\n\t\t\t!teamsSelectionIsValid ||\r\n\t\t\t!rostersSelectionIsValid ||\r\n\t\t\t!groupsSelectionIsValid ||\r\n\t\t\tnothingSelected\r\n\t\t);\r\n\t};\r\n\r\n\tprivate isNextBtnDisabled = () => {\r\n\t\tconst nmMsg = this.state.nmMensagem;\r\n\t\tconst btnTitle = this.state.btnTitle;\r\n\t\tconst btnLink = this.state.btnLink;\r\n\t\tconst btnTitle2 = this.state.buttonTitle2;\r\n\t\tconst btnLink2 = this.state.buttonLink2;\r\n\t\treturn !(\r\n\t\t\tnmMsg &&\r\n\t\t\t((btnTitle && btnLink) || (!btnTitle && !btnLink)) &&\r\n\t\t\t((btnTitle2 && btnLink2) || (!btnTitle2 && !btnLink2)) &&\r\n\t\t\tthis.state.errorImageUrlMessage === \"\" &&\r\n\t\t\tthis.state.errorButtonUrlMessage === \"\"\r\n\t\t);\r\n\t};\r\n\r\n\tprivate getItems = () => {\r\n\t\tconst resultedTeams: dropdownItem[] = [];\r\n\t\tif (this.state.teams) {\r\n\t\t\tlet remainingUserTeams = this.state.teams;\r\n\t\t\tif (this.state.selectedRadioBtn !== \"allUsers\") {\r\n\t\t\t\tif (this.state.selectedRadioBtn === \"teams\") {\r\n\t\t\t\t\tthis.state.teams.filter(\r\n\t\t\t\t\t\t(x) =>\r\n\t\t\t\t\t\t\tthis.state.selectedTeams.findIndex((y) => y.team.id === x.id) < 0\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (this.state.selectedRadioBtn === \"rosters\") {\r\n\t\t\t\t\tthis.state.teams.filter(\r\n\t\t\t\t\t\t(x) =>\r\n\t\t\t\t\t\t\tthis.state.selectedRosters.findIndex((y) => y.team.id === x.id) <\r\n\t\t\t\t\t\t\t0\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tremainingUserTeams.forEach((element) => {\r\n\t\t\t\tresultedTeams.push({\r\n\t\t\t\t\tkey: element.id,\r\n\t\t\t\t\theader: element.name,\r\n\t\t\t\t\tcontent: element.mail,\r\n\t\t\t\t\timage: ImageUtil.makeInitialImage(element.name),\r\n\t\t\t\t\tteam: {\r\n\t\t\t\t\t\tid: element.id,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn resultedTeams;\r\n\t};\r\n\r\n\tprivate static MAX_SELECTED_TEAMS_NUM: number = 20;\r\n\r\n\tprivate onTeamsChange = (event: any, itemsData: any) => {\r\n\t\tif (itemsData.value.length > NewMessage.MAX_SELECTED_TEAMS_NUM) return;\r\n\t\tthis.setState({\r\n\t\t\tselectedTeams: itemsData.value,\r\n\t\t\tselectedTeamsNum: itemsData.value.length,\r\n\t\t\tselectedRosters: [],\r\n\t\t\tselectedRostersNum: 0,\r\n\t\t\tselectedGroups: [],\r\n\t\t\tselectedGroupsNum: 0,\r\n\t\t});\r\n\t};\r\n\r\n\tprivate onRostersChange = (event: any, itemsData: any) => {\r\n\t\tif (itemsData.value.length > NewMessage.MAX_SELECTED_TEAMS_NUM) return;\r\n\t\tthis.setState({\r\n\t\t\tselectedRosters: itemsData.value,\r\n\t\t\tselectedRostersNum: itemsData.value.length,\r\n\t\t\tselectedTeams: [],\r\n\t\t\tselectedTeamsNum: 0,\r\n\t\t\tselectedGroups: [],\r\n\t\t\tselectedGroupsNum: 0,\r\n\t\t});\r\n\t};\r\n\r\n\tprivate onGroupsChange = (event: any, itemsData: any) => {\r\n\t\tthis.setState({\r\n\t\t\tselectedGroups: itemsData.value,\r\n\t\t\tselectedGroupsNum: itemsData.value.length,\r\n\t\t\tgroups: [],\r\n\t\t\tselectedTeams: [],\r\n\t\t\tselectedTeamsNum: 0,\r\n\t\t\tselectedRosters: [],\r\n\t\t\tselectedRostersNum: 0,\r\n\t\t});\r\n\t};\r\n\r\n\tprivate onGroupSearch = (itemList: any, searchQuery: string) => {\r\n\t\tconst result = itemList.filter(\r\n\t\t\t(item: { header: string; content: string }) =>\r\n\t\t\t\t(item.header &&\r\n\t\t\t\t\titem.header.toLowerCase().indexOf(searchQuery.toLowerCase()) !==\r\n\t\t\t\t\t\t-1) ||\r\n\t\t\t\t(item.content &&\r\n\t\t\t\t\titem.content.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1)\r\n\t\t);\r\n\t\treturn result;\r\n\t};\r\n\r\n\tprivate onGroupSearchQueryChange = async (event: any, itemsData: any) => {\r\n\t\tif (!itemsData.searchQuery) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tgroups: [],\r\n\t\t\t\tnoResultMessage: \"\",\r\n\t\t\t});\r\n\t\t} else if (itemsData.searchQuery && itemsData.searchQuery.length <= 2) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: false,\r\n\t\t\t\tnoResultMessage: \"No matches found.\",\r\n\t\t\t});\r\n\t\t} else if (itemsData.searchQuery && itemsData.searchQuery.length > 2) {\r\n\t\t\t// handle event trigger on item select.\r\n\t\t\tconst result =\r\n\t\t\t\titemsData.items &&\r\n\t\t\t\titemsData.items.find(\r\n\t\t\t\t\t(item: { header: string }) =>\r\n\t\t\t\t\t\titem.header.toLowerCase() === itemsData.searchQuery.toLowerCase()\r\n\t\t\t\t);\r\n\t\t\tif (result) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading: true,\r\n\t\t\t\tnoResultMessage: \"\",\r\n\t\t\t});\r\n\r\n\t\t\ttry {\r\n\t\t\t\tconst query = encodeURIComponent(itemsData.searchQuery);\r\n\t\t\t\tconst response = await searchGroupsDraft(query);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tgroups: response.data,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t\tnoResultMessage: \"No matches found.\",\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn error;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tprivate onSave = () => {\r\n\t\tconst selectedTeams: string[] = [];\r\n\t\tconst selctedRosters: string[] = [];\r\n\t\tconst selectedGroups: string[] = [];\r\n\t\tthis.state.selectedTeams.forEach((x) => selectedTeams.push(x.team.id));\r\n\t\tthis.state.selectedRosters.forEach((x) => selctedRosters.push(x.team.id));\r\n\t\tthis.state.selectedGroups.forEach((x) => selectedGroups.push(x.team.id));\r\n\r\n\t\tconst draftMessageObject: IDraftMessage = {\r\n\t\t\tid: this.state.messageId,\r\n\t\t\ttitle: this.state.title,\r\n\t\t\timageLink: this.state.imageLink,\r\n\t\t\tsummary: this.state.summary,\r\n\t\t\tauthor: this.state.author,\r\n\t\t\tbuttonTitle: this.state.btnTitle,\r\n\t\t\tbuttonLink: this.state.btnLink,\r\n\t\t\tteams: selectedTeams,\r\n\t\t\trosters: selctedRosters,\r\n\t\t\tgroups: selectedGroups,\r\n\t\t\tallUsers: this.state.allUsersOptionSelected,\r\n\t\t\tschedule: this.state.selectedSchedule,\r\n\t\t\tscheduleDate: this.state.scheduleDate,\r\n\t\t\ttemplate: this.state.selectedTemplate,\r\n\t\t\tnmMensagem: this.state.nmMensagem,\r\n\t\t\tbuttonLink2: this.state.buttonLink2,\r\n\t\t\tbuttonTitle2: this.state.buttonTitle2,\r\n\t\t\theaderImgLink: this.state.headerImgLink,\r\n\t\t\tfooterImgLink: this.state.footerImgLink,\r\n\t\t};\r\n\r\n\t\treturn \tthis.state.selectedTemplate === true && this.state.selectedSchedule === false && this.state.scheduleDate === \"\" ?\r\n\t\t\t\t\tthis.postTemplateMessage(draftMessageObject).then(() => {\r\n\t\t\t\t\t\tmicrosoftTeams.tasks.submitTask();\r\n\t\t\t\t\t})\r\n\t\t\t\t: \tthis.state.selectedTemplate === false && this.state.selectedSchedule === true && this.state.scheduleDate !== \"\" ?\r\n\t\t\t\t\tthis.postScheduleMessage(draftMessageObject).then(() => {\r\n\t\t\t\t\t\tmicrosoftTeams.tasks.submitTask();\r\n\t\t\t\t\t})\r\n\t\t\t\t: \tthis.state.exists && this.state.selectedTemplate === false && this.state.selectedSchedule === false && this.state.scheduleDate === \"\" ?\r\n\t\t\t\t\tthis.editDraftMessage(draftMessageObject).then(() => {\r\n\t\t\t\t\t\tmicrosoftTeams.tasks.submitTask();\r\n\t\t\t\t\t})\r\n\t\t\t\t:\r\n\t\t\t\t\tthis.postDraftMessage(draftMessageObject).then(() => {\r\n\t\t\t\t\t\tmicrosoftTeams.tasks.submitTask();\r\n\t\t\t\t\t})\r\n\r\n\t};\r\n\r\n\tprivate postDraftMessage = async (draftMessage: IDraftMessage) => {\r\n\t\ttry {\r\n\t\t\tawait createDraftNotification(draftMessage);\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\tprivate editDraftMessage = async (draftMessage: IDraftMessage) => {\r\n\t\ttry {\r\n\t\t\tawait updateDraftNotification(draftMessage);\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\tprivate postScheduleMessage = async (draftMessage: IDraftMessage) => {\r\n\t\ttry {\r\n\t\t\tawait createScheduleNotification(draftMessage);\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\tprivate postTemplateMessage = async (draftMessage: IDraftMessage) => {\r\n\t\ttry {\r\n\t\t\tawait createTemplateNotification(draftMessage);\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\r\n\tpublic escFunction(event: any) {\r\n\t\tif (event.keyCode === 27 || event.key === \"Escape\") {\r\n\t\t\tmicrosoftTeams.tasks.submitTask();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate onNext = (event: any) => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpage: \"AudienceSelection\",\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.updateCard();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tprivate onBack = (event: any) => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tpage: \"CardCreation\",\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tthis.updateCard();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tprivate onTitleChanged = (event: any) => {\r\n\t\tlet showDefaultCard =\r\n\t\t\t!event.target.value &&\r\n\t\t\t!this.state.imageLink &&\r\n\t\t\t!this.state.summary &&\r\n\t\t\t!this.state.author &&\r\n\t\t\t!this.state.btnTitle &&\r\n\t\t\t!this.state.btnLink &&\r\n\t\t\t!this.state.headerImgLink &&\r\n\t\t\t!this.state.footerImgLink &&\r\n\t\t\t!this.state.buttonTitle2 &&\r\n\t\t\t!this.state.buttonLink2;\r\n\r\n\t\tsetCardImgHeader(this.card, this.state.headerImgLink);\r\n\t\tsetCardTitle(this.card, event.target.value);\r\n\t\tsetCardImageLink(this.card, this.state.imageLink);\r\n\t\tsetCardSummary(this.card, this.state.summary);\r\n\t\tsetCardAuthor(this.card, this.state.author);\r\n\t\tsetCardImgFooter(this.card, this.state.footerImgLink);\r\n\r\n\t\tsetCardActions(this.card, this.state.btnTitle, this.state.btnLink, this.state.buttonTitle2, this.state.buttonLink2);\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.btnTitle) && !isStringNullOrWhiteSpace(this.state.btnLink)) {\r\n\t\t//\tsetCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n  //      }\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.buttonTitle2) && !isStringNullOrWhiteSpace(this.state.buttonLink2)) {\r\n\t\t//\tsetCardBtn02(this.card, this.state.buttonTitle2, this.state.buttonLink2);\r\n\t\t//}\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\ttitle: event.target.value,\r\n\t\t\t\tcard: this.card,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateCard();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tprivate onNmMsgChanged = (event: any) => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tnmMensagem: event.target.value,\r\n            }\r\n\t\t);\r\n    }\r\n\r\n\tprivate onImageLinkChanged = (event: any) => {\r\n\t\tlet url = event.target.value.toLowerCase();\r\n\r\n\t\tfunction validURL(str: string) {\r\n\t\t\tvar pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n\t\t\t  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n\t\t\t  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n\t\t\t  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n\t\t\t  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n\t\t\t  '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n\t\t\treturn !!pattern.test(str);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\turl === \"\" ||\r\n\t\t\t\turl.startsWith(\"https://\") ||\r\n\t\t\t\tvalidURL(url) ||\r\n\t\t\t\turl.startsWith(\"data:image/png;base64,\") ||\r\n\t\t\t\turl.startsWith(\"data:image/jpeg;base64,\") ||\r\n\t\t\t\turl.startsWith(\"data:image/gif;base64,\")\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorImageUrlMessage: \"URL must start with https://\",\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorImageUrlMessage: \"\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet showDefaultCard =\r\n\t\t\t!this.state.title &&\r\n\t\t\t!event.target.value &&\r\n\t\t\t!this.state.summary &&\r\n\t\t\t!this.state.author &&\r\n\t\t\t!this.state.btnTitle &&\r\n\t\t\t!this.state.btnLink &&\r\n\t\t\t!this.state.headerImgLink &&\r\n\t\t\t!this.state.footerImgLink &&\r\n\t\t\t!this.state.buttonTitle2 &&\r\n\t\t\t!this.state.buttonTitle2;\r\n\r\n\t\tsetCardImgHeader(this.card, this.state.headerImgLink);\r\n\t\tsetCardTitle(this.card, this.state.title);\r\n\t\tsetCardImageLink(this.card, event.target.value);\r\n\t\tsetCardSummary(this.card, this.state.summary);\r\n\t\tsetCardAuthor(this.card, this.state.author);\r\n\t\tsetCardImgFooter(this.card, this.state.footerImgLink);\r\n\r\n\t\tsetCardActions(this.card, this.state.btnTitle, this.state.btnLink, this.state.buttonTitle2, this.state.buttonLink2);\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.btnTitle) && !isStringNullOrWhiteSpace(this.state.btnLink)) {\r\n\t\t//\tsetCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n\t\t//}\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.buttonTitle2) && !isStringNullOrWhiteSpace(this.state.buttonLink2)) {\r\n\t\t//\tsetCardBtn02(this.card, this.state.buttonTitle2, this.state.buttonLink2);\r\n\t\t//}\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\timageLink: event.target.value,\r\n\t\t\t\tcard: this.card,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateCard();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tprivate onImageLinkHeaderChanged = (event: any) => {\r\n\t\tlet url = event.target.value.toLowerCase();\r\n\r\n\t\tfunction validURL(str: string) {\r\n\t\t\tvar pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n\t\t\t\t'((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n\t\t\t\t'((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n\t\t\t\t'(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n\t\t\t\t'(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n\t\t\t\t'(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n\t\t\treturn !!pattern.test(str);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\turl === \"\" ||\r\n\t\t\t\turl.startsWith(\"https://\") ||\r\n\t\t\t\tvalidURL(url) ||\r\n\t\t\t\turl.startsWith(\"data:image/png;base64,\") ||\r\n\t\t\t\turl.startsWith(\"data:image/jpeg;base64,\") ||\r\n\t\t\t\turl.startsWith(\"data:image/gif;base64,\")\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorImageUrlMessage: \"URL must start with https://\",\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorImageUrlMessage: \"\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet showDefaultCard =\r\n\t\t\t!this.state.title &&\r\n\t\t\t!event.target.value &&\r\n\t\t\t!this.state.summary &&\r\n\t\t\t!this.state.author &&\r\n\t\t\t!this.state.btnTitle &&\r\n\t\t\t!this.state.btnLink &&\r\n\t\t\t!this.state.imageLink &&\r\n\t\t\t!this.state.footerImgLink &&\r\n\t\t\t!this.state.buttonTitle2 &&\r\n\t\t\t!this.state.buttonLink2;\r\n\t\tsetCardImgHeader(this.card, event.target.value);\r\n\t\tsetCardTitle(this.card, this.state.title);\r\n\t\tsetCardImageLink(this.card)\r\n\t\tsetCardSummary(this.card, this.state.summary);\r\n\t\tsetCardAuthor(this.card, this.state.author);\r\n\t\tsetCardImgFooter(this.card, this.state.footerImgLink);\r\n\r\n\t\tsetCardActions(this.card, this.state.btnTitle, this.state.btnLink, this.state.buttonTitle2, this.state.buttonLink2);\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.btnTitle) && !isStringNullOrWhiteSpace(this.state.btnLink)) {\r\n\t\t//\tsetCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n\t\t//}\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.buttonTitle2) && !isStringNullOrWhiteSpace(this.state.buttonLink2)) {\r\n\t\t//\tsetCardBtn02(this.card, this.state.buttonTitle2, this.state.buttonLink2);\r\n\t\t//}\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\timageLink: event.target.value,\r\n\t\t\t\tcard: this.card,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateCard();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tprivate onImageLinkFooterChanged = (event: any) => {\r\n\t\tlet url = event.target.value.toLowerCase();\r\n\r\n\t\tfunction validURL(str: string) {\r\n\t\t\tvar pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n\t\t\t\t'((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n\t\t\t\t'((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n\t\t\t\t'(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n\t\t\t\t'(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n\t\t\t\t'(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n\t\t\treturn !!pattern.test(str);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\turl === \"\" ||\r\n\t\t\t\turl.startsWith(\"https://\") ||\r\n\t\t\t\tvalidURL(url) ||\r\n\t\t\t\turl.startsWith(\"data:image/png;base64,\") ||\r\n\t\t\t\turl.startsWith(\"data:image/jpeg;base64,\") ||\r\n\t\t\t\turl.startsWith(\"data:image/gif;base64,\")\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorImageUrlMessage: \"URL must start with https://\",\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorImageUrlMessage: \"\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet showDefaultCard =\r\n\t\t\t!this.state.title &&\r\n\t\t\t!event.target.value &&\r\n\t\t\t!this.state.summary &&\r\n\t\t\t!this.state.author &&\r\n\t\t\t!this.state.btnTitle &&\r\n\t\t\t!this.state.btnLink &&\r\n\t\t\t!this.state.imageLink &&\r\n\t\t\t!this.state.headerImgLink &&\r\n\t\t\t!this.state.buttonLink2 &&\r\n\t\t\t!this.state.buttonTitle2;\r\n\t\tsetCardImgHeader(this.card, this.state.headerImgLink)\r\n\t\tsetCardTitle(this.card, this.state.title);\r\n\t\tsetCardImageLink(this.card, this.state.imageLink);\r\n\t\tsetCardSummary(this.card, this.state.summary);\r\n\t\tsetCardAuthor(this.card, this.state.author);\r\n\t\tsetCardImgFooter(this.card, event.target.value);\r\n\r\n\t\tsetCardActions(this.card, this.state.btnTitle, this.state.btnLink, this.state.buttonTitle2, this.state.buttonLink2);\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.btnTitle) && !isStringNullOrWhiteSpace(this.state.btnLink)) {\r\n\t\t//\tsetCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n\t\t//}\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.buttonTitle2) && !isStringNullOrWhiteSpace(this.state.buttonLink2)) {\r\n\t\t//\tsetCardBtn02(this.card, this.state.buttonTitle2, this.state.buttonLink2);\r\n\t\t//}\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\timageLink: event.target.value,\r\n\t\t\t\tcard: this.card,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateCard();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tprivate onSummaryChanged = (event: any) => {\r\n\t\tlet showDefaultCard =\r\n\t\t\t!this.state.title &&\r\n\t\t\t!this.state.imageLink &&\r\n\t\t\t!event.target.value &&\r\n\t\t\t!this.state.author &&\r\n\t\t\t!this.state.btnTitle &&\r\n\t\t\t!this.state.btnLink &&\r\n\t\t\t!this.state.headerImgLink &&\r\n\t\t\t!this.state.footerImgLink &&\r\n\t\t\t!this.state.buttonTitle2 &&\r\n\t\t\t!this.state.buttonLink2;\r\n\t\tsetCardImgHeader(this.card, this.state.headerImgLink);\r\n\t\tsetCardTitle(this.card, this.state.title);\r\n\t\tsetCardImageLink(this.card, this.state.imageLink);\r\n\t\tsetCardSummary(this.card, event.target.value);\r\n\t\tsetCardAuthor(this.card, this.state.author);\r\n\t\tsetCardImgFooter(this.card, this.state.footerImgLink)\r\n\r\n\t\tsetCardActions(this.card, this.state.btnTitle, this.state.btnLink, this.state.buttonTitle2, this.state.buttonLink2);\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.btnTitle) && !isStringNullOrWhiteSpace(this.state.btnLink)) {\r\n\t\t//\tsetCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n\t\t//}\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.buttonTitle2) && !isStringNullOrWhiteSpace(this.state.buttonLink2)) {\r\n\t\t//\tsetCardBtn02(this.card, this.state.buttonTitle2, this.state.buttonLink2);\r\n\t\t//}\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tsummary: event.target.value,\r\n\t\t\t\tcard: this.card,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateCard();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tprivate onAuthorChanged = (event: any) => {\r\n\t\tlet showDefaultCard =\r\n\t\t\t!this.state.title &&\r\n\t\t\t!this.state.imageLink &&\r\n\t\t\t!this.state.summary &&\r\n\t\t\t!event.target.value &&\r\n\t\t\t!this.state.btnTitle &&\r\n\t\t\t!this.state.btnLink &&\r\n\t\t\t!this.state.headerImgLink &&\r\n\t\t\t!this.state.footerImgLink &&\r\n\t\t\t!this.state.buttonTitle2 &&\r\n\t\t\t!this.state.buttonLink2;\r\n\t\tsetCardImgHeader(this.card, this.state.headerImgLink)\r\n\t\tsetCardTitle(this.card, this.state.title);\r\n\t\tsetCardImageLink(this.card, this.state.imageLink);\r\n\t\tsetCardSummary(this.card, this.state.summary);\r\n\t\tsetCardAuthor(this.card, event.target.value);\r\n\t\tsetCardImgFooter(this.card, this.state.footerImgLink);\r\n\r\n\t\tsetCardActions(this.card, this.state.btnTitle, this.state.btnLink, this.state.buttonTitle2, this.state.buttonLink2);\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.btnTitle) && !isStringNullOrWhiteSpace(this.state.btnLink)) {\r\n\t\t//\tsetCardBtn(this.card, this.state.btnTitle, this.state.btnLink);\r\n\t\t//}\r\n\r\n\t\t//if (!isStringNullOrWhiteSpace(this.state.buttonTitle2) && !isStringNullOrWhiteSpace(this.state.buttonLink2)) {\r\n\t\t//\tsetCardBtn02(this.card, this.state.buttonTitle2, this.state.buttonLink2);\r\n\t\t//}\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tauthor: event.target.value,\r\n\t\t\t\tcard: this.card,\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t}\r\n\t\t\t\tthis.updateCard();\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tprivate onBtnTitleChanged = (event: any) => {\r\n\t\tconst showDefaultCard =\r\n\t\t\t!this.state.title &&\r\n\t\t\t!this.state.imageLink &&\r\n\t\t\t!this.state.summary &&\r\n\t\t\t!this.state.author &&\r\n\t\t\t!this.state.btnLink &&\r\n\t\t\t!this.state.headerImgLink &&\r\n\t\t\t!this.state.footerImgLink &&\r\n\t\t\t!this.state.buttonTitle2 &&\r\n\t\t\t!this.state.buttonLink2 &&\r\n\t\t\t!event.target.value;\r\n\r\n\t\tsetCardImgHeader(this.card, this.state.headerImgLink);\r\n\t\tsetCardTitle(this.card, this.state.title);\r\n\t\tsetCardImageLink(this.card, this.state.imageLink);\r\n\t\tsetCardSummary(this.card, this.state.summary);\r\n\t\tsetCardAuthor(this.card, this.state.author);\r\n\t\tsetCardImgFooter(this.card, this.state.footerImgLink);\r\n\r\n\t\tif (event.target.value && this.state.btnLink) {\r\n\t\t\tsetCardActions(this.card, event.target.value, this.state.btnLink, this.state.buttonTitle2, this.state.buttonLink2);\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tbtnTitle: event.target.value,\r\n\t\t\t\t\tcard: this.card\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.updateCard();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tbtnTitle: event.target.value,\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.updateCard();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate onBtnLinkChanged = (event: any) => {\r\n\t\tfunction validURL(str: string) {\r\n\t\t\tvar pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n\t\t\t  '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n\t\t\t  '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n\t\t\t  '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n\t\t\t  '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n\t\t\t  '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n\t\t\treturn !!pattern.test(str);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\tevent.target.value === \"\" ||\r\n\t\t\t\tevent.target.value.toLowerCase().startsWith(\"https://\") ||\r\n\t\t\t\tvalidURL(event.target.value)\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorButtonUrlMessage: \"URL must start with https://\",\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorButtonUrlMessage: \"\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst showDefaultCard =\r\n\t\t\t!this.state.title &&\r\n\t\t\t!this.state.imageLink &&\r\n\t\t\t!this.state.summary &&\r\n\t\t\t!this.state.author &&\r\n\t\t\t!this.state.btnTitle &&\r\n\t\t\t!this.state.footerImgLink &&\r\n\t\t\t!this.state.headerImgLink &&\r\n\t\t\t!this.state.buttonTitle2 &&\r\n\t\t\t!this.state.buttonLink2 &&\r\n\t\t\t!event.target.value;\r\n\r\n\t\tsetCardImgHeader(this.card, this.state.headerImgLink);\r\n\t\tsetCardTitle(this.card, this.state.title);\r\n\t\tsetCardSummary(this.card, this.state.summary);\r\n\t\tsetCardAuthor(this.card, this.state.author);\r\n\t\tsetCardImageLink(this.card, this.state.imageLink);\r\n\t\tsetCardImgFooter(this.card, this.state.footerImgLink);\r\n\r\n\t\tif (this.state.btnTitle && event.target.value) {\r\n\t\t\tsetCardActions(this.card, this.state.btnTitle, event.target.value, this.state.buttonTitle2, this.state.buttonLink2);\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tbtnLink: event.target.value,\r\n\t\t\t\t\tcard: this.card\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.updateCard();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tbtnLink: event.target.value,\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.updateCard();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate onBtnTitleChanged2 = (event: any) => {\r\n\t\tconst showDefaultCard =\r\n\t\t\t!this.state.title &&\r\n\t\t\t!this.state.imageLink &&\r\n\t\t\t!this.state.summary &&\r\n\t\t\t!this.state.author &&\r\n\t\t\t!this.state.btnLink &&\r\n\t\t\t!this.state.headerImgLink &&\r\n\t\t\t!this.state.footerImgLink &&\r\n\t\t\t!this.state.btnTitle &&\r\n\t\t\t!this.state.buttonLink2 &&\r\n\t\t\t!event.target.value;\r\n\r\n\t\tsetCardImgHeader(this.card, this.state.headerImgLink);\r\n\t\tsetCardTitle(this.card, this.state.title);\r\n\t\tsetCardImageLink(this.card, this.state.imageLink);\r\n\t\tsetCardSummary(this.card, this.state.summary);\r\n\t\tsetCardAuthor(this.card, this.state.author);\r\n\t\tsetCardImgFooter(this.card, this.state.footerImgLink);\r\n\r\n\t\tif (event.target.value && this.state.btnLink) {\r\n\t\t\tsetCardActions(this.card, this.state.btnTitle, this.state.btnLink, event.target.value, this.state.buttonLink2);\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttonTitle2: event.target.value,\r\n\t\t\t\t\tcard: this.card\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.updateCard();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttonTitle2: event.target.value,\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.updateCard();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate onBtnLinkChanged2 = (event: any) => {\r\n\t\tfunction validURL(str: string) {\r\n\t\t\tvar pattern = new RegExp('^(https?:\\\\/\\\\/)?' + // protocol\r\n\t\t\t\t'((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\r\n\t\t\t\t'((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\r\n\t\t\t\t'(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\r\n\t\t\t\t'(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\r\n\t\t\t\t'(\\\\#[-a-z\\\\d_]*)?$', 'i'); // fragment locator\r\n\t\t\treturn !!pattern.test(str);\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\tevent.target.value === \"\" ||\r\n\t\t\t\tevent.target.value.toLowerCase().startsWith(\"https://\") ||\r\n\t\t\t\tvalidURL(event.target.value)\r\n\t\t\t)\r\n\t\t) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorButtonUrlMessage: \"URL must start with https://\",\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrorButtonUrlMessage: \"\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst showDefaultCard =\r\n\t\t\t!this.state.title &&\r\n\t\t\t!this.state.imageLink &&\r\n\t\t\t!this.state.summary &&\r\n\t\t\t!this.state.author &&\r\n\t\t\t!this.state.btnTitle &&\r\n\t\t\t!this.state.footerImgLink &&\r\n\t\t\t!this.state.headerImgLink &&\r\n\t\t\t!this.state.buttonTitle2 &&\r\n\t\t\t!this.state.btnLink &&\r\n\t\t\t!event.target.value;\r\n\t\tsetCardImgHeader(this.card, this.state.headerImgLink);\r\n\t\tsetCardTitle(this.card, this.state.title);\r\n\t\tsetCardSummary(this.card, this.state.summary);\r\n\t\tsetCardAuthor(this.card, this.state.author);\r\n\t\tsetCardImageLink(this.card, this.state.imageLink);\r\n\t\tsetCardImgFooter(this.card, this.state.footerImgLink);\r\n\r\n\t\tif (this.state.btnTitle && event.target.value) {\r\n\t\t\tsetCardActions(this.card, this.state.btnTitle, this.state.btnLink, this.state.buttonTitle2, event.target.value);\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttonLink2: event.target.value,\r\n\t\t\t\t\tcard: this.card\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.updateCard();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\tbuttonLink2: event.target.value,\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tif (showDefaultCard) {\r\n\t\t\t\t\t\tthis.setDefaultCard(this.card);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.updateCard();\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate updateCard = () => {\r\n\t\tconst adaptiveCard = new AdaptiveCards.AdaptiveCard();\r\n\t\tadaptiveCard.parse(this.state.card);\r\n\t\tconst renderedCard = adaptiveCard.render();\r\n\t\tconst container = document.getElementsByClassName(\r\n\t\t\t\"adaptiveCardContainer\"\r\n\t\t)[0].firstChild;\r\n\t\tif (container != null) {\r\n\t\t\tcontainer.replaceWith(renderedCard);\r\n\t\t} else {\r\n\t\t\tdocument\r\n\t\t\t\t.getElementsByClassName(\"adaptiveCardContainer\")[0]\r\n\t\t\t\t.appendChild(renderedCard);\r\n\t\t}\r\n\t\tconst link = this.state.btnLink;\r\n\t\tadaptiveCard.onExecuteAction = function (action) {\r\n\t\t\twindow.open(link, \"_blank\");\r\n\t\t};\r\n\t};\r\n\r\n\tprivate onCheckedTemplate = () => {\r\n\t\tif (this.state.selectedTemplate === false) {\r\n\t\t\tthis.setState({ selectedTemplate: true });\r\n\t\t\tthis.setState({ selectedSchedule: false });\r\n\t\t\tthis.setState({ scheduleDate: \"\" });\r\n\t\t} else {\r\n\t\t\tthis.setState({ scheduleDate: \"\" });\r\n\t\t\tthis.setState({ selectedTemplate: false });\r\n\t\t\tthis.setState({ selectedSchedule: false });\r\n\t\t}\r\n\t};\r\n\r\n\tprivate onCheckedSchedule = () => {\r\n\t\tif (this.state.selectedSchedule === false) {\r\n\t\t\tthis.setState({ selectedSchedule: true });\r\n\t\t\tthis.setState({ selectedTemplate: false });\r\n\t\t} else {\r\n\t\t\tthis.setState({ scheduleDate: \"\" });\r\n\t\t\tthis.setState({ selectedSchedule: false });\r\n\t\t\tthis.setState({ selectedTemplate: false });\r\n\t\t}\r\n\t};\r\n\r\n\tprivate addDateSchedule = (event: any) => {\r\n\t\tthis.setState({ scheduleDate: event.target.value });\r\n\t};\r\n\r\n\tprivate clickUpload = () => {\r\n\t\tthis.inputElementFileBase64.click();\r\n\t}\r\n\r\n\tprivate clickUploadHeader = () => {\r\n\t\tthis.inputElementFileBase64Header.click();\r\n\t}\r\n\r\n\tprivate clickUploadFooter = () => {\r\n\t\tthis.inputElementFileBase64Footer.click();\r\n    }\r\n\r\n\tprivate getFiles = async (file: any) => {\r\n\t\tconst response = await imageBase64toURI(file.base64);\r\n\t\tsetCardImageLink(this.card, response.data);\r\n\t\treturn this.setState({imageLink: response.data},() => {this.updateCard()}\r\n\t\t);\r\n\t}\r\n\r\n\tprivate getFilesHeader = async (file: any) => {\r\n\t\tconst response = await imageBase64toURI(file.base64);\r\n\t\tsetCardImgHeader(this.card, response.data);\r\n\t\treturn this.setState({ headerImgLink: response.data }, () => { this.updateCard() });\r\n\t}\r\n\r\n\tprivate getFilesFooter = async (file: any) => {\r\n\t\tconst response = await imageBase64toURI(file.base64);\r\n\t\tsetCardImgFooter(this.card, response.data);\r\n\t\treturn this.setState({ footerImgLink: response.data }, () => { this.updateCard() });\r\n\t} \r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn { messages: state.draftMessagesList, selectedMessage: state.selectedMessage };\r\n}\r\n\r\nconst newMessageWithTranslation = withTranslation()(NewMessage);\r\nexport default connect(mapStateToProps, {getDraftMessagesList})(newMessageWithTranslation);\r\n","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\StatusTaskModule\\statusTaskModule.tsx",["130","131","132","133","134","135","136","137","138","139","140","141"],"import * as React from 'react';\r\nimport { withTranslation, WithTranslation } from \"react-i18next\";\r\nimport './statusTaskModule.scss';\r\nimport { getSentNotification, exportNotification } from '../../apis/messageListApi';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport * as AdaptiveCards from \"adaptivecards\";\r\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\r\nimport { TooltipHost } from 'office-ui-fabric-react';\r\nimport { Icon, Loader, List, Image, Button, IconProps } from '@stardust-ui/react';\r\nimport * as microsoftTeams from \"@microsoft/teams-js\";\r\nimport {\r\n    setCardTitle, setCardImageLink, setCardSummary, setCardImgFooter, setCardImgHeader, setCardAuthor, setCardActions, \r\n    getInitAdaptiveCard, getCardAuthor, getCardBtnLink, getCardBtnLink2, getCardBtnTitle, getCardBtnTitle2, getCardImageLink, getCardImgFooter, getCardImgHeader, getCardSummary, getCardTitle\r\n} from '../AdaptiveCard/adaptiveCard';\r\nimport { ImageUtil } from '../../utility/imageutility';\r\nimport { formatDate, formatDuration, formatNumber } from '../../i18n';\r\nimport { TFunction } from \"i18next\";\r\n\r\nexport interface IListItem {\r\n    header: string,\r\n    media: JSX.Element,\r\n}\r\n\r\nexport interface IMessage {\r\n    id: string;\r\n    title?: string;\r\n    acknowledgements?: string;\r\n    reactions?: string;\r\n    responses?: string;\r\n    succeeded?: string;\r\n    failed?: string;\r\n    unknown?: string;\r\n    sentDate?: string;\r\n    imageLink?: string;\r\n    summary?: string;\r\n    author?: string;\r\n    buttonLink?: string;\r\n    buttonTitle?: string;\r\n    teamNames?: string[];\r\n    rosterNames?: string[];\r\n    groupNames?: string[];\r\n    allUsers?: boolean;\r\n    sendingStartedDate?: string;\r\n    sendingDuration?: string;\r\n    errorMessage?: string;\r\n    warningMessage?: string;\r\n    canDownload?: boolean;\r\n    sendingCompleted?: boolean;\r\n    headerImgLink?: string;\r\n    footerImgLink?: string;\r\n    buttonLink2?: string;\r\n    buttonTitle2?: string;\r\n    nmMensagem: string;\r\n}\r\n\r\nexport interface IStatusState {\r\n    message: IMessage;\r\n    loader: boolean;\r\n    page: string;\r\n}\r\n\r\ninterface StatusTaskModuleProps extends RouteComponentProps, WithTranslation { }\r\n\r\nclass StatusTaskModule extends React.Component<StatusTaskModuleProps, IStatusState> {\r\n    readonly localize: TFunction;\r\n    private initMessage = {\r\n        id: \"\",\r\n        title: \"\",\r\n        nmMensagem: \"\"\r\n    };\r\n\r\n    private card: any;\r\n\r\n    constructor(props: StatusTaskModuleProps) {\r\n        super(props);\r\n        initializeIcons();\r\n\r\n        this.localize = this.props.t;\r\n\r\n        this.card = getInitAdaptiveCard(this.props.t);\r\n\r\n        this.state = {\r\n            message: this.initMessage,\r\n            loader: true,\r\n            page: \"ViewStatus\",\r\n        };\r\n    }\r\n\r\n    public componentDidMount() {\r\n        let params = this.props.match.params;\r\n\r\n        if ('id' in params) {\r\n            let id = params['id'];\r\n            this.getItem(id).then(() => {\r\n                this.setState({\r\n                    loader: false\r\n                }, () => {\r\n                    setCardTitle(this.card, this.state.message.title);\r\n                    setCardImageLink(this.card, this.state.message.imageLink);\r\n                    setCardSummary(this.card, this.state.message.summary);\r\n                    setCardAuthor(this.card, this.state.message.author);\r\n                    setCardActions(this.card, this.state.message.buttonTitle, this.state.message.buttonLink, this.state.message.buttonTitle2, this.state.message.buttonLink2);\r\n\r\n                    let adaptiveCard = new AdaptiveCards.AdaptiveCard();\r\n                    adaptiveCard.parse(this.card);\r\n                    let renderedCard = adaptiveCard.render();\r\n                    document.getElementsByClassName('adaptiveCardContainer')[0].appendChild(renderedCard);\r\n                    let link = this.state.message.buttonLink;\r\n                    adaptiveCard.onExecuteAction = function (action) { window.open(link, '_blank'); }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private getItem = async (id: number) => {\r\n        try {\r\n            const response = await getSentNotification(id);\r\n            response.data.sendingDuration = formatDuration(response.data.sendingStartedDate, response.data.sentDate);\r\n            response.data.sendingStartedDate = formatDate(response.data.sendingStartedDate);\r\n            response.data.sentDate = formatDate(response.data.sentDate);\r\n            response.data.succeeded = formatNumber(response.data.succeeded);\r\n            response.data.failed = formatNumber(response.data.failed);\r\n            response.data.unknown = response.data.unknown && formatNumber(response.data.unknown);\r\n            this.setState({\r\n                message: response.data\r\n            });\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n\r\n    public render(): JSX.Element {\r\n        if (this.state.loader) {\r\n            return (\r\n                <div className=\"Loader\">\r\n                    <Loader />\r\n                </div>\r\n            );\r\n        } else {\r\n            const downloadIcon: IconProps = { name: 'download', size: \"medium\" };\r\n            if (this.state.page === \"ViewStatus\") {\r\n                return (\r\n                    <div className=\"taskModule\">\r\n                        <div className=\"formContainer\">\r\n                            <div className=\"formContentContainer\" >\r\n                                <div className=\"contentField\">\r\n                                    <h3>{this.localize(\"TitleText\")}</h3>\r\n                                    <span>{this.state.message.title}</span>\r\n                                </div>\r\n                                <div className=\"contentField\">\r\n                                    <h3>{this.localize(\"SendingStarted\")}</h3>\r\n                                    <span>{this.state.message.sendingStartedDate}</span>\r\n                                </div>\r\n                                <div className=\"contentField\">\r\n                                    <h3>{this.localize(\"Completed\")}</h3>\r\n                                    <span>{this.state.message.sentDate}</span>\r\n                                </div>\r\n                                <div className=\"contentField\">\r\n                                    <h3>{this.localize(\"Duration\")}</h3>\r\n                                    <span>{this.state.message.sendingDuration}</span>\r\n                                </div>\r\n                                <div className=\"contentField\">\r\n                                    <h3>{this.localize(\"Results\")}</h3>\r\n                                    <label>{this.localize(\"Success\", { \"SuccessCount\": this.state.message.succeeded })}</label>\r\n                                    <br />\r\n                                    <label>{this.localize(\"Failure\", { \"FailureCount\": this.state.message.failed })}</label>\r\n                                    <br />\r\n                                    {this.state.message.unknown &&\r\n                                        <>\r\n                                        <label>{this.localize(\"Unknown\", { \"UnknownCount\": this.state.message.unknown })}</label>\r\n                                        </>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"contentField\">\r\n                                    {this.renderAudienceSelection()}\r\n                                </div>\r\n                                <div className=\"contentField\">\r\n                                    {this.renderErrorMessage()}\r\n                                </div>\r\n                                <div className=\"contentField\">\r\n                                    {this.renderWarningMessage()}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"adaptiveCardContainer\">\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"footerContainer\">\r\n                            <div className={this.state.message.canDownload ? \"\" : \"disabled\"}>\r\n                                <div className=\"buttonContainer\">\r\n                                    <Loader id=\"sendingLoader\" className=\"hiddenLoader sendingLoader\" size=\"smallest\" label={this.localize(\"ExportLabel\")} labelPosition=\"end\" />\r\n                                    <TooltipHost content={!this.state.message.sendingCompleted ? \"\" : (this.state.message.canDownload ? \"\" : this.localize(\"ExportButtonProgressText\"))} calloutProps={{ gapSpace: 0 }}>\r\n                                        <Button icon={downloadIcon} disabled={!this.state.message.canDownload || !this.state.message.sendingCompleted} content={this.localize(\"ExportButtonText\")} id=\"exportBtn\" onClick={this.onExport} primary />\r\n                                    </TooltipHost>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n            else if (this.state.page === \"SuccessPage\") {\r\n                return (\r\n                    <div className=\"taskModule\">\r\n                        <div className=\"formContainer\">\r\n                            <div className=\"displayMessageField\">\r\n                                <br />\r\n                                <br />\r\n                                <div><span><Icon className=\"iconStyle\" name=\"stardust-checkmark\" xSpacing=\"before\" size=\"largest\" outline /></span>\r\n                                    <h1>{this.localize(\"ExportQueueTitle\")}</h1></div>\r\n                                <span>{this.localize(\"ExportQueueSuccessMessage1\")}</span>\r\n                                <br />\r\n                                <br />\r\n                                <span>{this.localize(\"ExportQueueSuccessMessage2\")}</span>\r\n                                <br />\r\n                                <span>{this.localize(\"ExportQueueSuccessMessage3\")}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"footerContainer\">\r\n                            <div className=\"buttonContainer\">\r\n                                <Button content={this.localize(\"CloseText\")} id=\"closeBtn\" onClick={this.onClose} primary />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                );\r\n            }\r\n            else {\r\n                return (\r\n                    <div className=\"taskModule\">\r\n                        <div className=\"formContainer\">\r\n                            <div className=\"displayMessageField\">\r\n                                <br />\r\n                                <br />\r\n                                <div><span><Icon className=\"iconStyle\" name=\"stardust-close\" xSpacing=\"before\" size=\"largest\" outline /></span>\r\n                                    <h1 className=\"light\">{this.localize(\"ExportErrorTitle\")}</h1></div>\r\n                                <span>{this.localize(\"ExportErrorMessage\")}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"footerContainer\">\r\n                            <div className=\"buttonContainer\">\r\n                                <Button content={this.localize(\"CloseText\")} id=\"closeBtn\" onClick={this.onClose} primary />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    private onClose = () => {\r\n        microsoftTeams.tasks.submitTask();\r\n    }\r\n\r\n    private onExport = async () => {\r\n        let spanner = document.getElementsByClassName(\"sendingLoader\");\r\n        spanner[0].classList.remove(\"hiddenLoader\");\r\n        await exportNotification(this.state.message.id).then(() => {\r\n            this.setState({ page: \"SuccessPage\" })\r\n        }).catch(() => {\r\n            this.setState({ page: \"ErrorPage\" })\r\n        });\r\n    }\r\n\r\n    private getItemList = (items: string[]) => {\r\n        let resultedTeams: IListItem[] = [];\r\n        if (items) {\r\n            resultedTeams = items.map((element) => {\r\n                const resultedTeam: IListItem = {\r\n                    header: element,\r\n                    media: <Image src={ImageUtil.makeInitialImage(element)} avatar />\r\n                }\r\n                return resultedTeam;\r\n            });\r\n        }\r\n        return resultedTeams;\r\n    }\r\n    private renderAudienceSelection = () => {\r\n        if (this.state.message.teamNames && this.state.message.teamNames.length > 0) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"SentToGeneralChannel\")}</h3>\r\n                    <List items={this.getItemList(this.state.message.teamNames)} />\r\n                </div>);\r\n        } else if (this.state.message.rosterNames && this.state.message.rosterNames.length > 0) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"SentToRosters\")}</h3>\r\n                    <List items={this.getItemList(this.state.message.rosterNames)} />\r\n                </div>);\r\n        } else if (this.state.message.groupNames && this.state.message.groupNames.length > 0) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"SentToGroups1\")}</h3>\r\n                    <span>{this.localize(\"SentToGroups2\")}</span>\r\n                    <List items={this.getItemList(this.state.message.groupNames)} />\r\n                </div>);\r\n        } else if (this.state.message.allUsers) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"SendToAllUsers\")}</h3>\r\n                </div>);\r\n        } else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n    private renderErrorMessage = () => {\r\n        if (this.state.message.errorMessage) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"Errors\")}</h3>\r\n                    <span>{this.state.message.errorMessage}</span>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n\r\n    private renderWarningMessage = () => {\r\n        if (this.state.message.warningMessage) {\r\n            return (\r\n                <div>\r\n                    <h3>{this.localize(\"Warnings\")}</h3>\r\n                    <span>{this.state.message.warningMessage}</span>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n}\r\n\r\nconst StatusTaskModuleWithTranslation = withTranslation()(StatusTaskModule);\r\nexport default StatusTaskModuleWithTranslation;","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\SignInPage\\signInSimpleEnd.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\ErrorPage\\errorPage.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\configVariables.ts",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\AdaptiveCard\\adaptiveCard.ts",["142","143","144","145","146","147"],"import { TFunction } from \"i18next\";\r\n\r\nfunction isStringNullOrWhiteSpace(str: string| undefined) {\r\n    return str === undefined || str === null\r\n        || typeof str !== 'string'\r\n        || str.match(/^ *$/) !== null;\r\n};\r\n\r\nexport const getInitAdaptiveCard = (t: TFunction) => {\r\n    const titleTextAsString = t(\"TitleText\");\r\n    return (\r\n        {\r\n            \"type\": \"AdaptiveCard\",\r\n            \"body\": [\r\n                {\r\n                    \"type\": \"Image\",\r\n                    \"spacing\": \"Default\",\r\n                    \"url\": \"\",\r\n                    \"size\": \"Stretch\",\r\n                    \"width\": \"400px\",\r\n                    \"height\":\"100px\",\r\n                    \"altText\": \"\"\r\n                },\r\n                {\r\n                    \"type\": \"TextBlock\",\r\n                    \"weight\": \"Bolder\",\r\n                    \"text\": titleTextAsString,\r\n                    \"size\": \"ExtraLarge\",\r\n                    \"wrap\": true\r\n                },\r\n                {\r\n                    \"type\": \"TextBlock\",\r\n                    \"text\": \"\",\r\n                    \"wrap\": true\r\n                },\r\n                {\r\n                    \"type\": \"Image\",\r\n                    \"spacing\": \"Default\",\r\n                    \"url\": \"\",\r\n                    \"size\": \"Stretch\",\r\n                    \"width\": \"400px\",\r\n                    \"altText\": \"\"\r\n                },\r\n                {\r\n                    \"type\": \"TextBlock\",\r\n                    \"wrap\": true,\r\n                    \"size\": \"Small\",\r\n                    \"weight\": \"Lighter\",\r\n                    \"text\": \"\"\r\n                },\r\n                {\r\n                    \"type\": \"Image\",\r\n                    \"spacing\": \"Default\",\r\n                    \"url\": \"\",\r\n                    \"size\": \"Stretch\",\r\n                    \"width\": \"400px\",\r\n                    \"height\": \"100px\",\r\n                    \"altText\": \"\"\r\n                }\r\n            ],\r\n            \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\r\n            \"version\": \"1.2\",\r\n        }\r\n    );\r\n}\r\n\r\n// Get image header.\r\nexport const getCardImgHeader = (card: any) => {\r\n    return card.body[0].url;\r\n}\r\n\r\n// Set image header.\r\nexport const setCardImgHeader = (card: any, imageLink?: string) => {\r\n    card.body[0].url = imageLink;\r\n}\r\n\r\n// Get title.\r\nexport const getCardTitle = (card: any) => {\r\n    return card.body[1].text;\r\n}\r\n\r\n// Set title.\r\nexport const setCardTitle = (card: any, title?: string) => {\r\n    card.body[1].text = title;\r\n}\r\n\r\n// Get summary.\r\nexport const getCardSummary = (card: any) => {\r\n    return card.body[2].text;\r\n}\r\n\r\n// Set summary.\r\nexport const setCardSummary = (card: any, summary?: string) => {\r\n    card.body[2].text = summary;\r\n}\r\n\r\n// Get image.\r\nexport const getCardImageLink = (card: any) => {\r\n    return card.body[3].url;\r\n}\r\n\r\n// Set image\r\nexport const setCardImageLink = (card: any, imageLink?: string) => {\r\n    card.body[3].url = imageLink;\r\n}\r\n\r\n// Get author.\r\nexport const getCardAuthor = (card: any) => {\r\n    return card.body[4].text;\r\n}\r\n\r\n// Set author.\r\nexport const setCardAuthor = (card: any, author?: string) => {\r\n    card.body[4].text = author;\r\n}\r\n\r\n// Get image footer.\r\nexport const getCardImgFooter = (card: any) => {\r\n    return card.body[5].url;\r\n}\r\n\r\n// Set image footer.\r\nexport const setCardImgFooter = (card: any, imageLink?: string) => {\r\n    card.body[5].url = imageLink;\r\n}\r\n\r\n// Get button title.\r\nexport const getCardBtnTitle = (card: any) => {\r\n    return card.actions[0].title;\r\n}\r\n\r\n// Get button link URL.\r\nexport const getCardBtnLink = (card: any) => {\r\n    return card.actions[0].url;\r\n}\r\n\r\n// Get button title 02.\r\nexport const getCardBtnTitle2 = (card: any) => {\r\n    return card.actions[1].title;\r\n}\r\n\r\n// Get button link URL 02.\r\nexport const getCardBtnLink2 = (card: any) => {\r\n    return card.actions[1].url;\r\n}\r\n\r\n// Set button 01.\r\n//export const setCardBtn = (card: any, buttonTitle?: string, buttonLink?: string) => {\r\n//    if (!isStringNullOrWhiteSpace(buttonTitle) && !isStringNullOrWhiteSpace(buttonLink))\r\n//    {\r\n//        card.actions[0].title = buttonTitle;\r\n//        card.actions[0].url = buttonLink;\r\n//        //card.actions = [\r\n//        //    {\r\n//        //        \"type\": \"Action.OpenUrl\",\r\n//        //        \"title\": buttonTitle,\r\n//        //        \"url\": buttonLink\r\n//        //    }\r\n//        //];\r\n\r\n//        console.log(\"card inserido: \" + buttonLink + \" link: \" + buttonLink);\r\n//    } \r\n//}\r\n\r\n// Set button 02.\r\n//export const setCardBtn02 = (card: any, buttonTitle?: string, buttonLink?: string) => {\r\n//    if (!isStringNullOrWhiteSpace(buttonTitle) && !isStringNullOrWhiteSpace(buttonLink))\r\n//    {\r\n//        card.actions[1].title = buttonTitle;\r\n//        card.actions[1].url = buttonLink;\r\n//        //card.actions = [\r\n//        //    {\r\n//        //        \"type\": \"Action.OpenUrl\",\r\n//        //        \"title\": buttonTitle,\r\n//        //        \"url\": buttonLink\r\n//        //    }\r\n//        //];\r\n\r\n//        console.log(\"card inserido: \" + buttonLink + \" link: \" + buttonLink);\r\n//    }\r\n//}\r\n\r\n\r\nexport const setCardActions = (card: any, buttonTitle01?: string, buttonLink01?: string, buttonTitle02?: string, buttonLink02?: string) =>\r\n{\r\n    let btn01: boolean = false;\r\n    let btn02: boolean = false;\r\n\r\n    delete card.actions;\r\n\r\n    if (!isStringNullOrWhiteSpace(buttonTitle01) && !isStringNullOrWhiteSpace(buttonLink01)) {\r\n        btn01 = true;\r\n    }\r\n\r\n    if (!isStringNullOrWhiteSpace(buttonTitle02) && !isStringNullOrWhiteSpace(buttonLink02)) {\r\n        btn02 = true;\r\n    }\r\n\r\n    if (btn01 == true && btn02 == true) {\r\n        card.actions = [\r\n            {\r\n                \"type\": \"Action.OpenUrl\",\r\n                \"title\": buttonTitle01,\r\n                \"url\": buttonLink01\r\n            },\r\n            {\r\n                \"type\": \"Action.OpenUrl\",\r\n                \"title\": buttonTitle02,\r\n                \"url\": buttonLink02\r\n            }\r\n        ];\r\n    } else {\r\n        if (btn01 == true && btn02 == false) {\r\n            card.actions = [\r\n                {\r\n                    \"type\": \"Action.OpenUrl\",\r\n                    \"title\": buttonTitle01,\r\n                    \"url\": buttonLink01\r\n                }\r\n            ];\r\n        } else if (btn01 == false && btn02 == true) {\r\n            card.actions = [\r\n                {\r\n                    \"type\": \"Action.OpenUrl\",\r\n                    \"title\": buttonTitle02,\r\n                    \"url\": buttonLink02\r\n                }\r\n            ];\r\n        }\r\n    }\r\n    \r\n}","D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\apis\\messageListApi.ts",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\DraftMessages\\draftMessages.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\ScheduleMessages\\scheduleMessages.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\Messages\\messages.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\TemplateMessages\\templateMessages.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\utility\\imageutility.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\utility\\FileBase64.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\actions\\index.ts",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\apis\\axiosJWTDecorator.ts",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\OverFlow\\sentMessageOverflow.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\OverFlow\\templateMessageOverflow.tsx",[],"D:\\code\\CompanyF1\\Source\\Microsoft.Teams.Apps.CompanyCommunicator\\ClientApp\\src\\components\\OverFlow\\draftMessageOverflow.tsx",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":48,"column":10,"nodeType":"154","messageId":"155","endLine":48,"endColumn":16},{"ruleId":"152","severity":1,"message":"156","line":50,"column":10,"nodeType":"154","messageId":"155","endLine":50,"endColumn":34},{"ruleId":"152","severity":1,"message":"157","line":12,"column":53,"nodeType":"154","messageId":"155","endLine":12,"endColumn":69},{"ruleId":"152","severity":1,"message":"158","line":12,"column":71,"nodeType":"154","messageId":"155","endLine":12,"endColumn":87},{"ruleId":"152","severity":1,"message":"159","line":13,"column":26,"nodeType":"154","messageId":"155","endLine":13,"endColumn":39},{"ruleId":"152","severity":1,"message":"160","line":13,"column":41,"nodeType":"154","messageId":"155","endLine":13,"endColumn":55},{"ruleId":"152","severity":1,"message":"161","line":13,"column":57,"nodeType":"154","messageId":"155","endLine":13,"endColumn":72},{"ruleId":"152","severity":1,"message":"162","line":13,"column":74,"nodeType":"154","messageId":"155","endLine":13,"endColumn":89},{"ruleId":"152","severity":1,"message":"163","line":13,"column":91,"nodeType":"154","messageId":"155","endLine":13,"endColumn":107},{"ruleId":"152","severity":1,"message":"164","line":13,"column":109,"nodeType":"154","messageId":"155","endLine":13,"endColumn":125},{"ruleId":"152","severity":1,"message":"165","line":13,"column":127,"nodeType":"154","messageId":"155","endLine":13,"endColumn":143},{"ruleId":"152","severity":1,"message":"166","line":13,"column":145,"nodeType":"154","messageId":"155","endLine":13,"endColumn":161},{"ruleId":"152","severity":1,"message":"167","line":13,"column":163,"nodeType":"154","messageId":"155","endLine":13,"endColumn":177},{"ruleId":"152","severity":1,"message":"168","line":13,"column":179,"nodeType":"154","messageId":"155","endLine":13,"endColumn":191},{"ruleId":"169","severity":1,"message":"170","line":199,"column":15,"nodeType":"171","messageId":"172","endLine":199,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":199,"column":32,"nodeType":"171","messageId":"172","endLine":199,"endColumn":34},{"ruleId":"169","severity":1,"message":"170","line":213,"column":19,"nodeType":"171","messageId":"172","endLine":213,"endColumn":21},{"ruleId":"169","severity":1,"message":"170","line":213,"column":36,"nodeType":"171","messageId":"172","endLine":213,"endColumn":38},{"ruleId":"169","severity":1,"message":"170","line":221,"column":26,"nodeType":"171","messageId":"172","endLine":221,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":221,"column":44,"nodeType":"171","messageId":"172","endLine":221,"endColumn":46},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"@typescript-eslint/no-unused-vars","'isNull' is defined but never used.","Identifier","unusedVar","'isStringNullOrWhiteSpace' is defined but never used.","'setCardImgFooter' is defined but never used.","'setCardImgHeader' is defined but never used.","'getCardAuthor' is defined but never used.","'getCardBtnLink' is defined but never used.","'getCardBtnLink2' is defined but never used.","'getCardBtnTitle' is defined but never used.","'getCardBtnTitle2' is defined but never used.","'getCardImageLink' is defined but never used.","'getCardImgFooter' is defined but never used.","'getCardImgHeader' is defined but never used.","'getCardSummary' is defined but never used.","'getCardTitle' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]